<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.31 (Ruby 3.2.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="trust200902" docName="draft-ietf-suit-mti-02" category="std" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="MTI SUIT Algorithms">Mandatory-to-Implement Algorithms for Authors and Recipients of Software Update for the Internet of Things manifests</title>

    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>brendan.moran.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="Ø." surname="Rønningstad" fullname="Øyvind Rønningstad">
      <organization>Nordic Semiconductor</organization>
      <address>
        <email>oyvind.ronningstad@gmail.com</email>
      </address>
    </author>
    <author initials="A." surname="Tsukamoto" fullname="Akira Tsukamoto">
      <organization>ALAXALA Networks Corp.</organization>
      <address>
        <email>akira.tsukamoto@alaxala.com</email>
      </address>
    </author>

    <date year="2023" month="July" day="31"/>

    <area>Security</area>
    <workgroup>SUIT</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document specifies algorithm profiles for SUIT manifest parsers and authors to ensure better interoperability. These profiles apply specifically to a constrained node software update use case.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Mandatory algorithms may change over time due to an evolving threat landscape. Algorithms are grouped into algorithm profiles to account for this. Profiles may be deprecated over time. SUIT will define five choices of MTI profile specifically for constrained node software update. These profiles are:</t>

<t><list style="symbols">
  <t>One Symmetric MTI profile</t>
  <t>Three "Current" Asymmetric MTI profiles</t>
  <t>One "Future" Asymmetric MTI profile</t>
</list></t>

<t>At least one MTI algorithm in each category MUST be FIPS qualified.</t>

<t>Because SUIT presents an asymmetric communication profile, with powerful/complex manifest authors and constrained manifest recipients, the requirements for Recipients and Authors are different.</t>

<t>Recipients MAY choose which MTI profile they wish to implement. It is RECOMMENDED that they implement the "Future" Asymmetric MTI profile. Recipients MAY implement any number of other profiles.</t>

<t>Authors MUST implement all MTI profiles. Authors MAY implement any number of other profiles.</t>

<t>Other use-cases of SUIT MAY define their own MTI algorithms.</t>

</section>
<section anchor="algorithms"><name>Algorithms</name>

<t>The algorithms that form a part of the profiles defined in this document are grouped into:</t>

<t><list style="symbols">
  <t>Digest Algorithms</t>
  <t>Authentication Algorithms</t>
  <t>Key Exchange Algorithms</t>
  <t>Encryption Algorithms</t>
</list></t>

</section>
<section anchor="profiles"><name>Profiles</name>

<t>Recognized profiles are defined below.</t>

<section anchor="suit-sha256-hmac-a128-a128ctr"><name> Symmetric MTI profile: suit-sha256-hmac-a128-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HMAC-256</c>
      <c>5</c>
      <c>Key Exchange</c>
      <c>A128W Key Wrap</c>
      <c>-3</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-es256-ecdh-a128ctr"><name>Current Asymmetric MTI Profile 1: suit-sha256-es256-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>ES256</c>
      <c>-7</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-a128ctr"><name>Current Asymmetric MTI Profile 2: suit-sha256-eddsa-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-chacha-poly"><name>Current Asymmetric MTI Profile 3: suit-sha256-eddsa-ecdh-chacha-poly</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>ChaCha20/Poly1305</c>
      <c>24</c>
</texttable>

</section>
<section anchor="suit-sha256-hsslms-ecdh-a128ctr"><name>Future Asymmetric MTI Profile 1: suit-sha256-hsslms-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HSS-LMS</c>
      <c>-46</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
</section>
<section anchor="reporting-profiles"><name>Reporting Profiles</name>

<t>When using reverse-direction communication, particularly data structures that are designed for reporting of update capabilities, status, progress, or success, the same profile as the is used on the SUIT manifest SHOULD be used. There are cases where this is not possible, such as suit-sha256-hsslms-ecdh-a128ctr. In this case, the closest equivalent profile SHOULD be used, for example suit-sha256-ecdsa-ecdh-a128ctr.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>For the avoidance of doubt, there are scenarios where payload or manifest encryption are not required. In these scenarios, the encryption element of the selected profile is simply not used.</t>

<t>AES-CTR mode is specified, see <xref target="I-D.ietf-cose-aes-ctr-and-cbc"/>. All of the AES-CTR security considerations in <xref target="I-D.ietf-cose-aes-ctr-and-cbc"/> apply. A non-AEAD encryption mode is specified in this draft due to the following mitigating circumstances:</t>

<t><list style="symbols">
  <t>Streaming decryption must be supported. Therefore, there is no difference between AEAD and plaintext hash verification.</t>
  <t>Out-of-order decryption must be supported. Therefore, we must use a stream cipher that supports random access.</t>
  <t>There are no chosen plaintext attacks: the plaintext is authenticated prior to encryption.</t>
  <t>Content Encryption Keys MUST be used to encrypt only once. See <xref target="I-D.ietf-suit-firmware-encryption"/>.</t>
</list></t>

<t>As a result of these mitigating circumstances, AES-CTR is the most appropriate cipher for typical software/firmware delivery scenarios.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA is requested to create a page for COSE Algorithm Profiles within
the category for Software Update for the Internet of Things (SUIT)</t>

<t>IANA is also requested to create a registry for COSE Alforithm Profiles
within this page. The initial content of the registry is:</t>

<texttable>
      <ttcol align='left'>Profile</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Digest</ttcol>
      <ttcol align='left'>Authentication</ttcol>
      <ttcol align='left'>Key Exchange</ttcol>
      <ttcol align='left'>Encryption</ttcol>
      <ttcol align='left'>Descriptor Array</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>suit-sha256-hmac-a128-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>5</c>
      <c>-3</c>
      <c>-65534</c>
      <c>[-16, 5, -3, -65534]</c>
      <c><xref target="suit-sha256-hmac-a128-a128ctr"/></c>
      <c>suit-sha256-es256-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-7</c>
      <c>-25</c>
      <c>-65534</c>
      <c>[-16, -7, -25, -65534]</c>
      <c><xref target="suit-sha256-es256-ecdh-a128ctr"/></c>
      <c>suit-sha256-eddsa-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-25</c>
      <c>-65534</c>
      <c>[-16, -8, -25, -65534]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-a128ctr"/></c>
      <c>suit-sha256-eddsa-ecdh-chacha-poly</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-25</c>
      <c>24</c>
      <c>[-16, -8, -25, 24]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-chacha-poly"/></c>
      <c>suit-sha256-hsslms-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-46</c>
      <c>-25</c>
      <c>-65534</c>
      <c>[-16, -46, -25, -65534]</c>
      <c><xref target="suit-sha256-hsslms-ecdh-a128ctr"/></c>
</texttable>

<t>New entries to this registry require standards action.</t>

<t>-- back</t>

</section>
<section anchor="full-cddl"><name>A. Full CDDL</name>

<t>The following CDDL creates a subset of COSE for use with SUIT. Both tagged and untagged messages are defined. SUIT only uses tagged COSE messages, but untagged messages are also defined for use in protocols that share a ciphersuite with SUIT.</t>

<t>To be valid, the following CDDL MUST have the COSE CDDL appended to it. The COSE CDDL can be obtained by following the directions in <xref section="1.4" sectionFormat="comma" target="RFC9052"/>.</t>

<figure><sourcecode type="CDDL"><![CDATA[
SUIT_COSE_tool_tweak /= suit-sha256-hmac-a128-ccm
SUIT_COSE_tool_tweak /= suit-sha256-es256-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-chacha-poly
SUIT_COSE_tool_tweak /= suit-sha256-hsslms-ecdh-a128gcm

SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_HMAC_A128CCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_ES256_ECDH_A128GCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_EDDSA_ECDH_A128GCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_HSSLMS_ECDH_A128GCM

suit-sha256-hmac-a128-ccm = [-16, 5, -3, -65534]
suit-sha256-es256-ecdh-a128gcm = [-16, -7, -25, -65534]
suit-sha256-eddsa-ecdh-a128gcm = [-16, -8, -25, -65534]
suit-sha256-eddsa-ecdh-chacha-poly = [-16, -8, -25, 24]
suit-sha256-hsslms-ecdh-a128gcm = [-16, -46, -25, -65534]

SUIT_COSE_Profile_HMAC_A128CTR = SUIT_COSE_Profile<5,-65534> .and COSE_Messages
SUIT_COSE_Profile_ES256_ECDH_A128CTR = SUIT_COSE_Profile<-7,-65534> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_A128CTR = SUIT_COSE_Profile<-8,-65534> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304 = SUIT_COSE_Profile<-8,24> .and COSE_Messages
SUIT_COSE_Profile_HSSLMS_ECDH_A128CTR = SUIT_COSE_Profile<-46,-65534> .and COSE_Messages

SUIT_COSE_Profile<authid, encid> = SUIT_COSE_Messages<authid,encid>

SUIT_COSE_Messages<authid, encid> = SUIT_COSE_Untagged_Message<authid, encid> /
    SUIT_COSE_Tagged_Message<authid, encid> 
      
SUIT_COSE_Untagged_Message<authid, encid> = SUIT_COSE_Sign<authid> /
    SUIT_COSE_Sign1<authid> / SUIT_COSE_Encrypt<encid> / 
    SUIT_COSE_Encrypt0<encid> / SUIT_COSE_Mac<authid> /
    SUIT_COSE_Mac0<authid> 

SUIT_COSE_Tagged_Message<authid, encid> = SUIT_COSE_Sign_Tagged<authid> /
    SUIT_COSE_Sign1_Tagged<authid> / SUIT_COSE_Encrypt_Tagged<encid> /
    SUIT_COSE_Encrypt0_Tagged<encid> / SUIT_COSE_Mac_Tagged<authid> /
    SUIT_COSE_Mac0_Tagged<authid>

; Note: This is not the same definition as is used in COSE.
; It restricts a COSE header definition further without
; repeating the COSE definition. It should be merged
; with COSE by using the CDDL .and operator.
SUIT_COSE_Profile_Headers<algid> = (
    protected : bstr .cbor SUIT_COSE_alg_map<algid>,
    unprotected : SUIT_COSE_header_map
)
SUIT_COSE_alg_map<algid> = {
    1 => algid,
    * int => any
}

SUIT_COSE_header_map = {
    * int => any
}

SUIT_COSE_Sign_Tagged<authid> = #6.98(SUIT_COSE_Sign<authid>)


SUIT_COSE_Sign<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signatures : [+ SUIT_COSE_Signature<authid>]
]


SUIT_COSE_Signature<authid> =  [
    SUIT_COSE_Profile_Headers<authid>,      
    signature : bstr
]


SUIT_COSE_Sign1_Tagged<authid> = #6.18(SUIT_COSE_Sign1<authid>)


SUIT_COSE_Sign1<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signature : bstr
]


SUIT_COSE_Encrypt_Tagged<encid> = #6.96(SUIT_COSE_Encrypt<encid>)


SUIT_COSE_Encrypt<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_recipient<encid> = [    
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    ? recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_Encrypt0_Tagged<encid> = #6.16(SUIT_COSE_Encrypt0<encid>)


SUIT_COSE_Encrypt0<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
]


SUIT_COSE_Mac_Tagged<authid> = #6.97(SUIT_COSE_Mac<authid>)


SUIT_COSE_Mac<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
   recipients :[+SUIT_COSE_recipient<authid>]
]


SUIT_COSE_Mac0_Tagged<authid> = #6.17(SUIT_COSE_Mac0<authid>)


SUIT_COSE_Mac0<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
]
]]></sourcecode></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8152'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='July' year='2017'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8152'/>
  <seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>

<reference anchor='RFC8778'>
  <front>
    <title>Use of the HSS/LMS Hash-Based Signature Algorithm with CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='R. Housley' initials='R.' surname='Housley'/>
    <date month='April' year='2020'/>
    <abstract>
      <t>This document specifies the conventions for using the Hierarchical Signature System (HSS) / Leighton-Micali Signature (LMS) hash-based signature algorithm with the CBOR Object Signing and Encryption (COSE) syntax. The HSS/LMS algorithm is one form of hash-based digital signature; it is described in RFC 8554.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8778'/>
  <seriesInfo name='DOI' value='10.17487/RFC8778'/>
</reference>

<reference anchor='RFC9052'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='96'/>
  <seriesInfo name='RFC' value='9052'/>
  <seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>


<reference anchor='I-D.ietf-cose-aes-ctr-and-cbc'>
   <front>
      <title>CBOR Object Signing and Encryption (COSE): AES-CTR and AES-CBC</title>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         <organization>Arm Limited</organization>
      </author>
      <date day='25' month='May' year='2023'/>
      <abstract>
	 <t>   The Concise Binary Object Representation (CBOR) data format is
   designed for small code size and small message size.  CBOR Object
   Signing and Encryption (COSE) is specified in RFC 9052 to provide
   basic security services using the CBOR data format.  This document
   specifies the conventions for using AES-CTR and AES-CBC as Content
   Encryption algorithms with COSE.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-cose-aes-ctr-and-cbc-06'/>
   
</reference>


<reference anchor='I-D.ietf-suit-firmware-encryption'>
   <front>
      <title>Encrypted Payloads in SUIT Manifests</title>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='David Brown' initials='D.' surname='Brown'>
         <organization>Linaro</organization>
      </author>
      <author fullname='Ken Takayama' initials='K.' surname='Takayama'>
         <organization>SECOM CO., LTD.</organization>
      </author>
      <date day='10' month='July' year='2023'/>
      <abstract>
	 <t>   This document specifies techniques for encrypting software, firmware
   and personalization data by utilizing the IETF SUIT manifest.  Key
   agreement is provided by ephemeral-static (ES) Diffie-Hellman (DH)
   and AES Key Wrap (AES-KW).  ES-DH uses public key cryptography while
   AES-KW uses a pre-shared key-encryption key.  Encryption of the
   plaintext is accomplished with conventional symmetric key
   cryptography.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-firmware-encryption-13'/>
   
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.ietf-suit-manifest'>
   <front>
      <title>A Concise Binary Object Representation (CBOR)-based Serialization Format for the Software Updates for Internet of Things (SUIT) Manifest</title>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Henk Birkholz' initials='H.' surname='Birkholz'>
         <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Koen Zandberg' initials='K.' surname='Zandberg'>
         <organization>Inria</organization>
      </author>
      <author fullname='Øyvind Rønningstad' initials='O.' surname='Rønningstad'>
         <organization>Nordic Semiconductor</organization>
      </author>
      <date day='27' month='February' year='2023'/>
      <abstract>
	 <t>   This specification describes the format of a manifest.  A manifest is
   a bundle of metadata about code/data obtained by a recipient (chiefly
   the firmware for an IoT device), where to find the that code/data,
   the devices to which it applies, and cryptographic information
   protecting the manifest.  Software updates and Trusted Invocation
   both tend to use sequences of common operations, so the manifest
   encodes those sequences of operations, rather than declaring the
   metadata.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-manifest-22'/>
   
</reference>


<reference anchor="IANA-COSE" target="https://www.iana.org/assignments/cose/cose.xhtml">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
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
MJoGhrArAAA=

-->

</rfc>

