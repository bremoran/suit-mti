<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.31 (Ruby 3.2.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="trust200902" docName="draft-ietf-suit-mti-02" category="std" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="MTI SUIT Algorithms">Mandatory-to-Implement Algorithms for Authors and Recipients of Software Update for the Internet of Things manifests</title>

    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>brendan.moran.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="Ø." surname="Rønningstad" fullname="Øyvind Rønningstad">
      <organization>Nordic Semiconductor</organization>
      <address>
        <email>oyvind.ronningstad@gmail.com</email>
      </address>
    </author>
    <author initials="A." surname="Tsukamoto" fullname="Akira Tsukamoto">
      <organization>ALAXALA Networks Corp.</organization>
      <address>
        <email>akira.tsukamoto@alaxala.com</email>
      </address>
    </author>

    <date year="2023" month="July" day="28"/>

    <area>Security</area>
    <workgroup>SUIT</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document specifies algorithm profiles for SUIT manifest parsers and authors to ensure better interoperability. These profiles apply specifically to a constrained node software update use case.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Mandatory algorithms may change over time due to an evolving threat landscape. Algorithms are grouped into algorithm profiles to account for this. Profiles may be deprecated over time. SUIT will define four choices of MTI profile specifically for constrained node software update. These profiles are:</t>

<t><list style="symbols">
  <t>One Symmetric MTI profile</t>
  <t>Two "Current" Asymmetric MTI profiles</t>
  <t>One "Future" Asymmetric MTI profile</t>
</list></t>

<t>At least one MTI algorithm in each category MUST be FIPS qualified.</t>

<t>Because SUIT presents an asymmetric communication profile, with powerful/complex manifest authors and constrained manifest recipients, the requirements for Recipients and Authors are different.</t>

<t>Recipients MAY choose which MTI profile they wish to implement. It is RECOMMENDED that they implement the "Future" Asymmetric MTI profile. Recipients MAY implement any number of other profiles.</t>

<t>Authors MUST implement all MTI profiles. Authors MAY implement any number of other profiles.</t>

<t>Other use-cases of SUIT MAY define their own MTI algorithms.</t>

</section>
<section anchor="algorithms"><name>Algorithms</name>

<t>The algorithms that form a part of the profiles defined in this document are grouped into:</t>

<t><list style="symbols">
  <t>Digest Algorithms</t>
  <t>Authentication Algorithms</t>
  <t>Key Exchange Algorithms</t>
  <t>Encryption Algorithms</t>
</list></t>

</section>
<section anchor="profiles"><name>Profiles</name>

<t>Recognized profiles are defined below.</t>

<section anchor="suit-sha256-hmac-a128-ccm"><name> Symmetric MTI profile: suit-sha256-hmac-a128-ccm</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HMAC-256</c>
      <c>5</c>
      <c>Key Exchange</c>
      <c>A128W Key Wrap</c>
      <c>-3</c>
      <c>Encryption</c>
      <c>AES-CCM-16-128-128</c>
      <c>30</c>
</texttable>

</section>
<section anchor="suit-sha256-es256-ecdh-a128gcm"><name>Current Asymmetric MTI Profile 1: suit-sha256-es256-ecdh-a128gcm</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>ES256</c>
      <c>-7</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128GCM</c>
      <c>1</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-a128gcm"><name>Current Asymmetric MTI Profile 2: suit-sha256-eddsa-ecdh-a128gcm</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128GCM</c>
      <c>1</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-chacha-poly"><name>Current Asymmetric MTI Profile 3: suit-sha256-eddsa-ecdh-chacha-poly</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>ChaCha20/Poly1305</c>
      <c>24</c>
</texttable>

</section>
<section anchor="suit-sha256-hsslms-ecdh-a128gcm"><name>Future Asymmetric MTI Profile 1: suit-sha256-hsslms-ecdh-a128gcm</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HSS-LMS</c>
      <c>-46</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128GCM</c>
      <c>1</c>
</texttable>

</section>
</section>
<section anchor="reporting-profiles"><name>Reporting Profiles</name>

<t>When using reverse-direction communication, particularly data structures that are designed for reporting of update capabilities, status, progress, or success, the same profile as the is used on the SUIT manifest SHOULD be used. There are cases where this is not possible, such as suit-sha256-hsslms-ecdh-a128gcm. In this case, the closest equivalent profile SHOULD be used, for example suit-sha256-ecdsa-ecdh-a128gcm.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>For the avoidance of doubt, there are scenarios where payload or manifest encryption are not required. In these scenarios, the encryption element of the selected profile is simply not used.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA is requested to create a page for COSE Algorithm Profiles within
the category for Software Update for the Internet of Things (SUIT)</t>

<t>IANA is also requested to create a registry for COSE Alforithm Profiles
within this page. The initial content of the registry is:</t>

<texttable>
      <ttcol align='left'>Profile</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Digest</ttcol>
      <ttcol align='left'>Authentication</ttcol>
      <ttcol align='left'>Key Exchange</ttcol>
      <ttcol align='left'>Encryption</ttcol>
      <ttcol align='left'>Descriptor Array</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>suit-sha256-hmac-a128-ccm</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>5</c>
      <c>-3</c>
      <c>12</c>
      <c>[-16, 5, -3, 12]</c>
      <c><xref target="suit-sha256-hmac-a128-ccm"/></c>
      <c>suit-sha256-es256-ecdh-a128gcm</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-7</c>
      <c>-25</c>
      <c>1</c>
      <c>[-16, -7, -3, 1]</c>
      <c><xref target="suit-sha256-es256-ecdh-a128gcm"/></c>
      <c>suit-sha256-eddsa-ecdh-a128gcm</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-25</c>
      <c>1</c>
      <c>[-16, -8, -3, 1]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-a128gcm"/></c>
      <c>suit-sha256-hsslms-ecdh-a128gcm</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-25</c>
      <c>1</c>
      <c>[-16, -46, -3, 1]</c>
      <c><xref target="suit-sha256-hsslms-ecdh-a128gcm"/></c>
</texttable>

<t>New entries to this registry require standards action.</t>

<t>-- back</t>

</section>
<section anchor="full-cddl"><name>A. Full CDDL</name>

<t>The following CDDL creates a subset of COSE for use with SUIT. Both tagged and untagged messages are defined. SUIT only uses tagged COSE messages, but untagged messages are also defined for use in protocols that share a ciphersuite with SUIT.</t>

<t>To be valid, the following CDDL MUST have the COSE CDDL appended to it. The COSE CDDL can be obtained by following the directions in <xref section="1.4" sectionFormat="comma" target="RFC9052"/>.</t>

<figure><sourcecode type="CDDL"><![CDATA[
SUIT_COSE_tool_tweak /= suit-sha256-hmac-a128-ccm
SUIT_COSE_tool_tweak /= suit-sha256-es256-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-chacha-poly
SUIT_COSE_tool_tweak /= suit-sha256-hsslms-ecdh-a128gcm

SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_HMAC_A128CCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_ES256_ECDH_A128GCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_EDDSA_ECDH_A128GCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_EDDSA_ECDH_CHACHA_POLY
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_HSSLMS_ECDH_A128GCM

suit-sha256-hmac-a128-ccm = [5, 12]
suit-sha256-es256-ecdh-a128gcm = [-7, 1]
suit-sha256-eddsa-ecdh-a128gcm = [-8, 1]
suit-sha256-hsslms-ecdh-a128gcm = [-46, 1]

SUIT_COSE_Profile_HMAC_A128CCM = SUIT_COSE_Profile<5,12> .and COSE_Messages
SUIT_COSE_Profile_ES256_ECDH_A128GCM = SUIT_COSE_Profile<-7,1> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_A128GCM = SUIT_COSE_Profile<-8,1> .and COSE_Messages
SUIT_COSE_Profile_HSSLMS_ECDH_A128GCM = SUIT_COSE_Profile<-46,1> .and COSE_Messages

SUIT_COSE_Profile<authid, encid> = SUIT_COSE_Messages<authid,encid>

SUIT_COSE_Messages<authid, encid> = SUIT_COSE_Untagged_Message<authid, encid> /
    SUIT_COSE_Tagged_Message<authid, encid> 
      
SUIT_COSE_Untagged_Message<authid, encid> = SUIT_COSE_Sign<authid> /
    SUIT_COSE_Sign1<authid> / SUIT_COSE_Encrypt<encid> / 
    SUIT_COSE_Encrypt0<encid> / SUIT_COSE_Mac<authid> /
    SUIT_COSE_Mac0<authid> 

SUIT_COSE_Tagged_Message<authid, encid> = SUIT_COSE_Sign_Tagged<authid> /
    SUIT_COSE_Sign1_Tagged<authid> / SUIT_COSE_Encrypt_Tagged<encid> /
    SUIT_COSE_Encrypt0_Tagged<encid> / SUIT_COSE_Mac_Tagged<authid> /
    SUIT_COSE_Mac0_Tagged<authid>

; Note: This is not the same definition as is used in COSE.
; It restricts a COSE header definition further without
; repeating the COSE definition. It should be merged
; with COSE by using the CDDL .and operator.
SUIT_COSE_Profile_Headers<algid> = (
    protected : bstr .cbor SUIT_COSE_alg_map<algid>,
    unprotected : SUIT_COSE_header_map
)
SUIT_COSE_alg_map<algid> = {
    1 => algid,
    * int => any
}

SUIT_COSE_header_map = {
    * int => any
}

SUIT_COSE_Sign_Tagged<authid> = #6.98(SUIT_COSE_Sign<authid>)


SUIT_COSE_Sign<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signatures : [+ SUIT_COSE_Signature<authid>]
]


SUIT_COSE_Signature<authid> =  [
    SUIT_COSE_Profile_Headers<authid>,      
    signature : bstr
]


SUIT_COSE_Sign1_Tagged<authid> = #6.18(SUIT_COSE_Sign1<authid>)


SUIT_COSE_Sign1<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signature : bstr
]


SUIT_COSE_Encrypt_Tagged<encid> = #6.96(SUIT_COSE_Encrypt<encid>)


SUIT_COSE_Encrypt<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_recipient<encid> = [    
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    ? recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_Encrypt0_Tagged<encid> = #6.16(SUIT_COSE_Encrypt0<encid>)


SUIT_COSE_Encrypt0<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
]


SUIT_COSE_Mac_Tagged<authid> = #6.97(SUIT_COSE_Mac<authid>)


SUIT_COSE_Mac<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
   recipients :[+SUIT_COSE_recipient<authid>]
]


SUIT_COSE_Mac0_Tagged<authid> = #6.17(SUIT_COSE_Mac0<authid>)


SUIT_COSE_Mac0<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
]
]]></sourcecode></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8152'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='July' year='2017'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8152'/>
  <seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>

<reference anchor='RFC8778'>
  <front>
    <title>Use of the HSS/LMS Hash-Based Signature Algorithm with CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='R. Housley' initials='R.' surname='Housley'/>
    <date month='April' year='2020'/>
    <abstract>
      <t>This document specifies the conventions for using the Hierarchical Signature System (HSS) / Leighton-Micali Signature (LMS) hash-based signature algorithm with the CBOR Object Signing and Encryption (COSE) syntax. The HSS/LMS algorithm is one form of hash-based digital signature; it is described in RFC 8554.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8778'/>
  <seriesInfo name='DOI' value='10.17487/RFC8778'/>
</reference>

<reference anchor='RFC9052'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='96'/>
  <seriesInfo name='RFC' value='9052'/>
  <seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.ietf-suit-manifest'>
   <front>
      <title>A Concise Binary Object Representation (CBOR)-based Serialization Format for the Software Updates for Internet of Things (SUIT) Manifest</title>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Henk Birkholz' initials='H.' surname='Birkholz'>
         <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Koen Zandberg' initials='K.' surname='Zandberg'>
         <organization>Inria</organization>
      </author>
      <author fullname='Øyvind Rønningstad' initials='O.' surname='Rønningstad'>
         <organization>Nordic Semiconductor</organization>
      </author>
      <date day='27' month='February' year='2023'/>
      <abstract>
	 <t>   This specification describes the format of a manifest.  A manifest is
   a bundle of metadata about code/data obtained by a recipient (chiefly
   the firmware for an IoT device), where to find the that code/data,
   the devices to which it applies, and cryptographic information
   protecting the manifest.  Software updates and Trusted Invocation
   both tend to use sequences of common operations, so the manifest
   encodes those sequences of operations, rather than declaring the
   metadata.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-manifest-22'/>
   
</reference>


<reference anchor="IANA-COSE" target="https://www.iana.org/assignments/cose/cose.xhtml">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

