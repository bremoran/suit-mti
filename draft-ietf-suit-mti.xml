<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.31 (Ruby 3.2.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="trust200902" docName="draft-ietf-suit-mti-02" category="std" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="MTI SUIT Algorithms">Mandatory-to-Implement Algorithms for Authors and Recipients of Software Update for the Internet of Things manifests</title>

    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>brendan.moran.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="Ø." surname="Rønningstad" fullname="Øyvind Rønningstad">
      <organization>Nordic Semiconductor</organization>
      <address>
        <email>oyvind.ronningstad@gmail.com</email>
      </address>
    </author>
    <author initials="A." surname="Tsukamoto" fullname="Akira Tsukamoto">
      <organization>ALAXALA Networks Corp.</organization>
      <address>
        <email>akira.tsukamoto@alaxala.com</email>
      </address>
    </author>

    <date year="2023" month="July" day="31"/>

    <area>Security</area>
    <workgroup>SUIT</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document specifies algorithm profiles for SUIT manifest parsers and authors to ensure better interoperability. These profiles apply specifically to a constrained node software update use case.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Mandatory algorithms may change over time due to an evolving threat landscape. Algorithms are grouped into algorithm profiles to account for this. Profiles may be deprecated over time. SUIT will define five choices of MTI profile specifically for constrained node software update. These profiles are:</t>

<t><list style="symbols">
  <t>One Symmetric MTI profile</t>
  <t>Three "Current" Asymmetric MTI profiles</t>
  <t>One "Future" Asymmetric MTI profile</t>
</list></t>

<t>At least one MTI algorithm in each category MUST be FIPS qualified.</t>

<t>Because SUIT presents an asymmetric communication profile, with powerful/complex manifest authors and constrained manifest recipients, the requirements for Recipients and Authors are different.</t>

<t>Recipients MAY choose which MTI profile they wish to implement. It is RECOMMENDED that they implement the "Future" Asymmetric MTI profile. Recipients MAY implement any number of other profiles.</t>

<t>Authors MUST implement all MTI profiles. Authors MAY implement any number of other profiles.</t>

<t>Other use-cases of SUIT MAY define their own MTI algorithms.</t>

</section>
<section anchor="algorithms"><name>Algorithms</name>

<t>The algorithms that form a part of the profiles defined in this document are grouped into:</t>

<t><list style="symbols">
  <t>Digest Algorithms</t>
  <t>Authentication Algorithms</t>
  <t>Key Exchange Algorithms</t>
  <t>Encryption Algorithms</t>
</list></t>

</section>
<section anchor="profiles"><name>Profiles</name>

<t>Recognized profiles are defined below.</t>

<section anchor="suit-sha256-hmac-a128kw-a128ctr"><name> Symmetric MTI profile: suit-sha256-hmac-a128kw-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HMAC-256</c>
      <c>5</c>
      <c>Key Exchange</c>
      <c>A128KW Key Wrap</c>
      <c>-3</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-es256-ecdh-a128ctr"><name>Current Asymmetric MTI Profile 1: suit-sha256-es256-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>ES256</c>
      <c>-7</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-a128ctr"><name>Current Asymmetric MTI Profile 2: suit-sha256-eddsa-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-chacha-poly"><name>Current Asymmetric MTI Profile 3: suit-sha256-eddsa-ecdh-chacha-poly</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + HKDF-256</c>
      <c>-25</c>
      <c>Encryption</c>
      <c>ChaCha20/Poly1305</c>
      <c>24</c>
</texttable>

</section>
<section anchor="suit-sha256-hsslms-a256kw-a256ctr"><name>Future Asymmetric MTI Profile 1: suit-sha256-hsslms-a256kw-a256ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HSS-LMS</c>
      <c>-46</c>
      <c>Key Exchange</c>
      <c>A256KW</c>
      <c>-5</c>
      <c>Encryption</c>
      <c>A256CTR</c>
      <c>-65532</c>
</texttable>

</section>
</section>
<section anchor="reporting-profiles"><name>Reporting Profiles</name>

<t>When using reverse-direction communication, particularly data structures that are designed for reporting of update capabilities, status, progress, or success, the same profile as the is used on the SUIT manifest SHOULD be used. There are cases where this is not possible, such as suit-sha256-hsslms-ecdh-a128ctr. In this case, the closest equivalent profile SHOULD be used, for example suit-sha256-ecdsa-ecdh-a128ctr.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>For the avoidance of doubt, there are scenarios where payload or manifest encryption are not required. In these scenarios, the encryption element of the selected profile is simply not used.</t>

<t>AES-CTR mode is specified, see <xref target="I-D.ietf-cose-aes-ctr-and-cbc"/>. All of the AES-CTR security considerations in <xref target="I-D.ietf-cose-aes-ctr-and-cbc"/> apply. A non-AEAD encryption mode is specified in this draft due to the following mitigating circumstances:</t>

<t><list style="symbols">
  <t>Streaming decryption must be supported. Therefore, there is no difference between AEAD and plaintext hash verification.</t>
  <t>Out-of-order decryption must be supported. Therefore, we must use a stream cipher that supports random access.</t>
  <t>There are no chosen plaintext attacks: the plaintext is authenticated prior to encryption.</t>
  <t>Content Encryption Keys MUST be used to encrypt only once. See <xref target="I-D.ietf-suit-firmware-encryption"/>.</t>
</list></t>

<t>As a result of these mitigating circumstances, AES-CTR is the most appropriate cipher for typical software/firmware delivery scenarios.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA is requested to create a page for COSE Algorithm Profiles within
the category for Software Update for the Internet of Things (SUIT)</t>

<t>IANA is also requested to create a registry for COSE Alforithm Profiles
within this page. The initial content of the registry is:</t>

<texttable>
      <ttcol align='left'>Profile</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Digest</ttcol>
      <ttcol align='left'>Auth</ttcol>
      <ttcol align='left'>Key Exchange</ttcol>
      <ttcol align='left'>Encryption</ttcol>
      <ttcol align='left'>Descriptor Array</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>suit-sha256-hmac-a128kw-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>5</c>
      <c>-3</c>
      <c>-65534</c>
      <c>[-16,   5,  -3, -65534]</c>
      <c><xref target="suit-sha256-hmac-a128kw-a128ctr"/></c>
      <c>suit-sha256-es256-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-7</c>
      <c>-25</c>
      <c>-65534</c>
      <c>[-16,  -7, -25, -65534]</c>
      <c><xref target="suit-sha256-es256-ecdh-a128ctr"/></c>
      <c>suit-sha256-eddsa-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-25</c>
      <c>-65534</c>
      <c>[-16,  -8, -25, -65534]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-a128ctr"/></c>
      <c>suit-sha256-eddsa-ecdh-chacha-poly</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-25</c>
      <c>24</c>
      <c>[-16,  -8, -25,     24]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-chacha-poly"/></c>
      <c>suit-sha256-hsslms-a256kw-a256ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-46</c>
      <c>-5</c>
      <c>-65532</c>
      <c>[-16, -46,  -5, -65532]</c>
      <c><xref target="suit-sha256-hsslms-a256kw-a256ctr"/></c>
</texttable>

<t>New entries to this registry require standards action.</t>

<t>-- back</t>

</section>
<section anchor="full-cddl"><name>A. Full CDDL</name>

<t>The following CDDL creates a subset of COSE for use with SUIT. Both tagged and untagged messages are defined. SUIT only uses tagged COSE messages, but untagged messages are also defined for use in protocols that share a ciphersuite with SUIT.</t>

<t>To be valid, the following CDDL MUST have the COSE CDDL appended to it. The COSE CDDL can be obtained by following the directions in <xref section="1.4" sectionFormat="comma" target="RFC9052"/>.</t>

<figure><sourcecode type="CDDL"><![CDATA[
SUIT_COSE_tool_tweak /= suit-sha256-hmac-a128-ccm
SUIT_COSE_tool_tweak /= suit-sha256-es256-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-chacha-poly
SUIT_COSE_tool_tweak /= suit-sha256-hsslms-ecdh-a128gcm

SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_HMAC_A128CCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_ES256_ECDH_A128GCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_EDDSA_ECDH_A128GCM
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304
SUIT_COSE_tool_tweak /= SUIT_COSE_Profile_HSSLMS_ECDH_A128GCM

suit-sha256-hmac-a128-ccm = [-16, 5, -3, -65534]
suit-sha256-es256-ecdh-a128gcm = [-16, -7, -25, -65534]
suit-sha256-eddsa-ecdh-a128gcm = [-16, -8, -25, -65534]
suit-sha256-eddsa-ecdh-chacha-poly = [-16, -8, -25, 24]
suit-sha256-hsslms-ecdh-a128gcm = [-16, -46, -25, -65534]

SUIT_COSE_Profile_HMAC_A128CTR = SUIT_COSE_Profile<5,-65534> .and COSE_Messages
SUIT_COSE_Profile_ES256_ECDH_A128CTR = SUIT_COSE_Profile<-7,-65534> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_A128CTR = SUIT_COSE_Profile<-8,-65534> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304 = SUIT_COSE_Profile<-8,24> .and COSE_Messages
SUIT_COSE_Profile_HSSLMS_ECDH_A128CTR = SUIT_COSE_Profile<-46,-65534> .and COSE_Messages

SUIT_COSE_Profile<authid, encid> = SUIT_COSE_Messages<authid,encid>

SUIT_COSE_Messages<authid, encid> = SUIT_COSE_Untagged_Message<authid, encid> /
    SUIT_COSE_Tagged_Message<authid, encid> 
      
SUIT_COSE_Untagged_Message<authid, encid> = SUIT_COSE_Sign<authid> /
    SUIT_COSE_Sign1<authid> / SUIT_COSE_Encrypt<encid> / 
    SUIT_COSE_Encrypt0<encid> / SUIT_COSE_Mac<authid> /
    SUIT_COSE_Mac0<authid> 

SUIT_COSE_Tagged_Message<authid, encid> = SUIT_COSE_Sign_Tagged<authid> /
    SUIT_COSE_Sign1_Tagged<authid> / SUIT_COSE_Encrypt_Tagged<encid> /
    SUIT_COSE_Encrypt0_Tagged<encid> / SUIT_COSE_Mac_Tagged<authid> /
    SUIT_COSE_Mac0_Tagged<authid>

; Note: This is not the same definition as is used in COSE.
; It restricts a COSE header definition further without
; repeating the COSE definition. It should be merged
; with COSE by using the CDDL .and operator.
SUIT_COSE_Profile_Headers<algid> = (
    protected : bstr .cbor SUIT_COSE_alg_map<algid>,
    unprotected : SUIT_COSE_header_map
)
SUIT_COSE_alg_map<algid> = {
    1 => algid,
    * int => any
}

SUIT_COSE_header_map = {
    * int => any
}

SUIT_COSE_Sign_Tagged<authid> = #6.98(SUIT_COSE_Sign<authid>)


SUIT_COSE_Sign<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signatures : [+ SUIT_COSE_Signature<authid>]
]


SUIT_COSE_Signature<authid> =  [
    SUIT_COSE_Profile_Headers<authid>,      
    signature : bstr
]


SUIT_COSE_Sign1_Tagged<authid> = #6.18(SUIT_COSE_Sign1<authid>)


SUIT_COSE_Sign1<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signature : bstr
]


SUIT_COSE_Encrypt_Tagged<encid> = #6.96(SUIT_COSE_Encrypt<encid>)


SUIT_COSE_Encrypt<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_recipient<encid> = [    
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    ? recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_Encrypt0_Tagged<encid> = #6.16(SUIT_COSE_Encrypt0<encid>)


SUIT_COSE_Encrypt0<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
]


SUIT_COSE_Mac_Tagged<authid> = #6.97(SUIT_COSE_Mac<authid>)


SUIT_COSE_Mac<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
   recipients :[+SUIT_COSE_recipient<authid>]
]


SUIT_COSE_Mac0_Tagged<authid> = #6.17(SUIT_COSE_Mac0<authid>)


SUIT_COSE_Mac0<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
]
]]></sourcecode></figure>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8152'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='July' year='2017'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8152'/>
  <seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>

<reference anchor='RFC8778'>
  <front>
    <title>Use of the HSS/LMS Hash-Based Signature Algorithm with CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='R. Housley' initials='R.' surname='Housley'/>
    <date month='April' year='2020'/>
    <abstract>
      <t>This document specifies the conventions for using the Hierarchical Signature System (HSS) / Leighton-Micali Signature (LMS) hash-based signature algorithm with the CBOR Object Signing and Encryption (COSE) syntax. The HSS/LMS algorithm is one form of hash-based digital signature; it is described in RFC 8554.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8778'/>
  <seriesInfo name='DOI' value='10.17487/RFC8778'/>
</reference>

<reference anchor='RFC9052'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='96'/>
  <seriesInfo name='RFC' value='9052'/>
  <seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>


<reference anchor='I-D.ietf-cose-aes-ctr-and-cbc'>
   <front>
      <title>CBOR Object Signing and Encryption (COSE): AES-CTR and AES-CBC</title>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         <organization>Arm Limited</organization>
      </author>
      <date day='25' month='May' year='2023'/>
      <abstract>
	 <t>   The Concise Binary Object Representation (CBOR) data format is
   designed for small code size and small message size.  CBOR Object
   Signing and Encryption (COSE) is specified in RFC 9052 to provide
   basic security services using the CBOR data format.  This document
   specifies the conventions for using AES-CTR and AES-CBC as Content
   Encryption algorithms with COSE.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-cose-aes-ctr-and-cbc-06'/>
   
</reference>


<reference anchor='I-D.ietf-suit-firmware-encryption'>
   <front>
      <title>Encrypted Payloads in SUIT Manifests</title>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='David Brown' initials='D.' surname='Brown'>
         <organization>Linaro</organization>
      </author>
      <author fullname='Ken Takayama' initials='K.' surname='Takayama'>
         <organization>SECOM CO., LTD.</organization>
      </author>
      <date day='10' month='July' year='2023'/>
      <abstract>
	 <t>   This document specifies techniques for encrypting software, firmware
   and personalization data by utilizing the IETF SUIT manifest.  Key
   agreement is provided by ephemeral-static (ES) Diffie-Hellman (DH)
   and AES Key Wrap (AES-KW).  ES-DH uses public key cryptography while
   AES-KW uses a pre-shared key-encryption key.  Encryption of the
   plaintext is accomplished with conventional symmetric key
   cryptography.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-firmware-encryption-13'/>
   
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.ietf-suit-manifest'>
   <front>
      <title>A Concise Binary Object Representation (CBOR)-based Serialization Format for the Software Updates for Internet of Things (SUIT) Manifest</title>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Henk Birkholz' initials='H.' surname='Birkholz'>
         <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Koen Zandberg' initials='K.' surname='Zandberg'>
         <organization>Inria</organization>
      </author>
      <author fullname='Øyvind Rønningstad' initials='O.' surname='Rønningstad'>
         <organization>Nordic Semiconductor</organization>
      </author>
      <date day='27' month='February' year='2023'/>
      <abstract>
	 <t>   This specification describes the format of a manifest.  A manifest is
   a bundle of metadata about code/data obtained by a recipient (chiefly
   the firmware for an IoT device), where to find the that code/data,
   the devices to which it applies, and cryptographic information
   protecting the manifest.  Software updates and Trusted Invocation
   both tend to use sequences of common operations, so the manifest
   encodes those sequences of operations, rather than declaring the
   metadata.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-manifest-22'/>
   
</reference>


<reference anchor="IANA-COSE" target="https://www.iana.org/assignments/cose/cose.xhtml">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022"/>
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
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
visAAA==

-->

</rfc>

